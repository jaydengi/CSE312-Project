{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceyao/Desktop/untitled folder/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _errors$Email, _errors$Email2, _errors$Password;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = inputs => {\n    const data = {\n      type: inputs.Account_Type,\n      country: inputs.Country,\n      email: inputs.Email,\n      business_type: inputs.Business_Type,\n      capabilities: {\n        card_payments: {\n          requested: true\n        },\n        transfers: {\n          requested: true\n        }\n      }\n    };\n    fetch(\"/info\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => alert(\"The account id is: \" + data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    class: \"bbbg\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"formbg\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"formTitle\",\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Email\", {\n              required: true,\n              pattern: /^\\S+@\\S+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"errors\",\n            children: (((_errors$Email = errors.Email) === null || _errors$Email === void 0 ? void 0 : _errors$Email.type) === 'required' || ((_errors$Email2 = errors.Email) === null || _errors$Email2 === void 0 ? void 0 : _errors$Email2.type) === 'pattern') && \"Email is incorrect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"field\",\n          id: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Password\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"errors\",\n            children: ((_errors$Password = errors.Password) === null || _errors$Password === void 0 ? void 0 : _errors$Password.type) === 'required' && \"Password is required!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lawrenceyao/Desktop/untitled folder/client/src/App.js"],"names":["useForm","App","register","handleSubmit","formState","errors","onSubmit","inputs","data","type","Account_Type","country","Country","email","Email","business_type","Business_Type","capabilities","card_payments","requested","transfers","fetch","method","headers","body","JSON","stringify","then","res","json","alert","required","pattern","Password"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useForm } from \"react-hook-form\";\n\nfunction App() {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = inputs => {\n    const data = {\n      type: inputs.Account_Type,\n      country: inputs.Country,\n      email: inputs.Email,\n      business_type: inputs.Business_Type,\n      capabilities: {\n          card_payments: {requested: true},\n          transfers: {requested: true},\n      },\n    }\n    fetch(\"/info\",{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then((res) => res.json()).then((data) => alert(\"The account id is: \" + data))\n  }\n\n  \n\n  return (\n    <body class='bbbg'>\n      <br></br>\n      <br></br>\n      <br></br>\n      <div class= 'formbg'> \n        <br></br>\n\n        <span class='formTitle'>Create an Account</span>\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n          <p class = \"field\">\n              <label>Email</label>\n              <input {...register(\"Email\",{required: true, pattern: /^\\S+@\\S+$/i})}/>\n              <p class=\"errors\">\n                {(errors.Email?.type === 'required' || errors.Email?.type === 'pattern') && \"Email is incorrect!\"}\n              </p>\n          </p>\n         \n\n          <p class = \"field\" id = \"password\">\n            <label>Password</label>\n            <input {...register(\"Password\",{required: true})}></input>\n            <p class=\"errors\">\n                {(errors.Password?.type === 'required') && \"Password is required!\"}\n              </p>\n          </p>\n        \n          <p class = \"field\">\n            <input type=\"submit\" />\n          </p>\n        </form>\n      </div>\n      \n\n    </body>\n\n    \n    \n  );\n\n}\n\n\n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}